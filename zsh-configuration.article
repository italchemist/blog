title: ZSH
date: 2012-11-02
id: zsh-configuration

Доброго времени суток!

Терминал является очень нужной штукой, это и так все знают. Однако, не все настраивают под свои нужды. Этим сейчас и займёмся. Настраивать, естественно, будем *zsh*.

Установка ZSH
-------------

Для начала установим *oh my zsh* - разрабатываемый сообществом фреймвёрк для настройки zsh. Включает более 40+ плагинов (*rails*, *git*, *OSX*, *hub*, *capistrano*, *brew*, *ant*, *macports*, и другие), более 80 тем, и систему обновления для того чтобы поддерживать скрипты в актуальном состоянии. Хостится на гитхабе: https://github.com/robbyrussell/oh-my-zsh

Устанавливаем согласно инструкции: (на сайте предложены различные варианты установки, включая ручной)

```
wget --no-check-certificate https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh
```

Теперь включим необходимые плагины, отредактировав ./.zshrc:

```
plugins=(git rails ruby)
```

На этом базовая настройка закончена, что уже даёт огромное количество возможностей. Однако, перейдём к созданию своего собственной конфигурации.

Свой плагин для ZSH
-------------------

Файл будет загружен автоматиески если просто поместить его в *~/.oh-my-zsh/custom*. Однако если нужно создать плагин, то структура должна быть такой: *~/.oh-my-zsh/custom/#{plugin_name}/#{plugin_name}.plugin.zsh*

Я создам плагин *cd-to-project*, который будет выполнять *cd* до директории с проектом. Так выглядит плагин (*~/.oh-my-zsh/custom/cd-to-project/cd-to-project.plugin.zsh*):

```zsh
prj() { cd ~/Projects/$1; }
_prj() { _files -W ~/Projects -/; }
compdef _prj prj
```

Первая строка объявляет комманду *prj* и её действие. Вторая строка - предоставление автодополнения. Всё что вернёт эта функция будет предложено для автодополнения. Третья строка указывает какой команде какая функция атодополнения соответствует.

Теперь нужно добавить плагин в *.zshrc*

```
plugins=(git cd-to-project)
```

После перезапуска терминала данный плагин будет работать. Нужно набрать *prj*, пробел и нажать *tab* два раза для автодополнения.

Вот ещё несколько полезных функций:

```
cdl() { cd $1 && ls }
mkcd() { mkdir $1 && cd $1 }
```

Данная функция извлекает архив любого типа:

```
extract () {
 if [ -f $1 ] ; then
 case $1 in
 *.tar.bz2)   tar xjf $1    ;;
 *.tar.gz)    tar xzf $1    ;;
 *.bz2)       bunzip2 $1    ;;
 *.rar)       unrar x $1    ;;
 *.gz)        gunzip $1     ;;
 *.tar)       tar xf $1     ;;
 *.tbz2)      tar xjf $1    ;;
 *.tbz)       tar -xjvf $1  ;;
 *.tgz)       tar xzf $1    ;;
 *.zip)       unzip $1      ;;
 *.Z)         uncompress $1 ;;
 *.7z)        7z x $1       ;;
 *)           echo "I don't know how to extract '$1'..." ;;
 esac
 else
 echo "'$1' is not a valid file"
 fi
} 
```

Также можно устанавливать алиасы на команды:

```
alias ls='ls --classify --color --human-readable --group-directories-first'
alias s='sudo'
```

Также можно настроить приложение которое будет открывать файлы по типу расширения

```
alias -s txt=nano
```

Таким образом zsh очень легко конфигурируется под свои нужды.